import java.time.LocalDateTime
import java.time.Month
import java.time.temporal.ChronoUnit

apply plugin: "com.android.application"

android {
    namespace = "su.xash.tf15client"
    ndkVersion = "28.2.13676358"
    compileSdk = 36

    defaultConfig {
        applicationId = "su.xash.tf15client"
        versionName = "0.99"
        versionCode = getBuildNum()
        minSdk = 21
        targetSdk = 36
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    externalNativeBuild {
        cmake {
            version = "3.22.1"
            path file("../../CMakeLists.txt")
        }
    }

    lint {
        abortOnError = false
    }

    packaging {
        jniLibs {
            keepDebugSymbols.add("**/*.so")
            useLegacyPackaging = true
        }
    }

    sourceSets {
        main {
            assets {
                srcDirs += "${project.projectDir}/../../3rdparty/tf15client-extras"
            }
        }
    }

    buildTypes {
        debug {
            debuggable = true
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
        }

        release {
            minifyEnabled = true
            shrinkResources = true
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
        }
    }
}

static def getBuildNum() {
    LocalDateTime now = LocalDateTime.now()
    LocalDateTime releaseDate = LocalDateTime.of(2018, Month.DECEMBER, 7, 0, 0, 0)
    int qBuildNum = releaseDate.until(now, ChronoUnit.DAYS)
    int minuteOfDay = now.getHour() * 60 + now.getMinute()
    return qBuildNum * 10000 + minuteOfDay
}